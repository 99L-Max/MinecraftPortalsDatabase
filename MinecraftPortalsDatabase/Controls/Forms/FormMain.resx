<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMIOAADCDgAAAAAAAAAA
        AACeADafvwVUwcgLX8jNEGjNzRFqzr8FVMG+AVC+1Rt71c0QaM27AU69zxRx0dIXc9KxAD+xpgA6p7EA
        QLKxAD+xtgFHt7QBQ7XGCl3H5U+k5dUce9WxAD+xrAA8rb4BT768AU28pgA6p7YBRrbZJILZ0BNv0LMA
        QbOiADijswBBs7cBSbm5AUm72SyK29gjg9ixAECynQA3nbsBTr2+AU++wQZXw7MAQbOjADakvAFNvNIa
        edTZK4nbtgFFt68APrC/BVTB2SyK29kkgtm0AUW1qgA7rLcBSrnZLYrbzxRx0dATb9DZJYTZugFKuqIA
        OKK+AU++2SaE2dwyj97AAlLAxAZYxNATb9CxAECyqgA7rMQGWMTgO5fg3DKP3r8FVMHIDGLK3DKP3tUh
        fde2AUa2owA2pLwBTbzZKobawgZVwrYBRbevAD6wngA1nrwBTbzZJYPZ2SqG2rwBTby5AUy7zRJsz8gL
        YMngPJjg2SaG2rEAQLKkADemtgFHt7MAQbPDBlrFsgFCtL4EUL7YI4PY1h161q8APrCrADuruQFJu8AF
        UsDSGHTSzRJsz9ATb9DGB13HtgFHt8IGVcK9BFG/zxNx0b4BT760AUO1xgZbxrwBTby3AUm5tAFDtaIA
        OKPPE3HR2SyK2+E+muG/BVTBrgA9rqgAOajNEGjNyAtgycYKXce2AUa2sQA/scYHXce7AU69rQA+r7YB
        R7euAD2uzRJsz8gLX8jNEm3PzRFqzqkAOqqoADmouQFJu8EGV8PWHHrWywxky74EUL7ZLIrbzxRx0agA
        OaioADmotwFJubcBSrnAAlLAxglbxq8APrCkADemvwVUwdkqhtrDBlrFrwA+sLQBRbWqADusyAtgyeA6
        l+DIDGLKpgA6p6MANqSkADemtwFJuaYAOqeeADafvQRRv9knhtrPF3HRpAA3pqkAOqq7AU69ogA4o6IA
        OKLLDGTL2SSD2cgMYsqkADemsQBAsrEAP7GkADemwQZXw9YdfdbLDGTLrgA9rqUAOaW8AU28ywxky80S
        as6sADytpQA5pcEGV8PZLIrbyg9mzM8UcdG4AUi4wQZXw+BCnOLLDGTLrgA9rqMANqTGCVvG1Rt61c0R
        as7gQZrizRBoza8APrClADmlvwVUwdMadtPSGnjUwgZVwssMZMvNEmzPsQBAsqEAN6G+AU++0BJv0OBB
        m+LZJ4baywxky9ksitvSGHTSpgA6p6cAOam9BFC/sQBAsqMANqS+BFC+twFKubEAQLK4AUi4vAFOvL8F
        VMG5AUm7zRFqzs8UcdHLDGTLyAtgybYBR7e4AUi4yAxiyr0EUb+sADytyAtgydgjgNi9BFG/owA2pKsA
        O6u/BVTBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>